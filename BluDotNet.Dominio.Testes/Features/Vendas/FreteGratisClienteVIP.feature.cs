// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18034
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BluDotNet.Dominio.Testes.Features.Vendas
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Frete grátis para clientes VIP na compra de 5 ou mais livros")]
    public partial class FreteGratisParaClientesVIPNaCompraDe5OuMaisLivrosFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FreteGratisClienteVIP.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Frete grátis para clientes VIP na compra de 5 ou mais livros", "Para aumentar a fidelização dos nossos clientes, oferecemos frete grátis\r\nnas com" +
                    "pras de 5 ou mais livros para nossos clientes VIP", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Realizando compra de somente livros")]
        [NUnit.Framework.TestCaseAttribute("Normal", "5", "Sedex", null)]
        [NUnit.Framework.TestCaseAttribute("Normal", "10", "Sedex", null)]
        [NUnit.Framework.TestCaseAttribute("VIP", "5", "Sedex,Gratuito", null)]
        [NUnit.Framework.TestCaseAttribute("VIP", "4", "Sedex", null)]
        public virtual void RealizandoCompraDeSomenteLivros(string tipoCliente, string quantidade, string tipoFrete, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Realizando compra de somente livros", exampleTags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given(string.Format("Uma compra de um cliente {0} com {1} livros", tipoCliente, quantidade), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 9
 testRunner.When("Eu finalizar a compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 10
 testRunner.Then(string.Format("Devo ter a opção de frete {0}", tipoFrete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Realizando uma compra de livros junto com outros produtos")]
        [NUnit.Framework.TestCaseAttribute("Normal", "10", null)]
        [NUnit.Framework.TestCaseAttribute("VIP", "10", null)]
        public virtual void RealizandoUmaCompraDeLivrosJuntoComOutrosProdutos(string tipoCliente, string quantidade, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Realizando uma compra de livros junto com outros produtos", exampleTags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given(string.Format("Uma compra de um cliente {0} com {1} livros e qualquer outro produto", tipoCliente, quantidade), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 21
 testRunner.When("Eu finalizar a compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 22
 testRunner.Then("Não devo ter a opção de frete gratuito", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
